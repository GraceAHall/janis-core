workflow:
    inputs:
        children : 
            type : SequenceReadArchivePaired
            forward-pattern: "regex"
            backward-pattern: "regex"

        parent : 
            type : SequenceReadArchivePaired
            forward-pattern: "regex"
            backward-pattern: "regex"
            
        X:
        Y:
        Z:

    steps:
        qc:
            inputs:
                fastq: children + parent #Union then type conversion ( to array )  
        
        
        
        
        align:
            inputs:
                paired-read: children, parent # Threading over sets. (Then scattering on each set)
                X:
                Y:
                Z:
            outputs:
                aligned-file:
            
        output of align is 1 file named aligned-file
        
        align.children.aligned-file[] | align.parent.aligned-file[]

        since that can be plugged into convert, convert is now part of the thread
        
        convert:
            inputs:
                input:
            outputs:
                out:

        one file generated can flow into next
        
        sort:
            inputs:
                file:
            outputs:
                sorted:
        
        one file generated can flow into next

        index:

        
        dedup:
            inputs:
                file:
            outputs:
                dups_output:
                dups_metrics:
                
        !!!!! Mismatch - Next step takes one file
            ? which to plug in?????        
            
            - Explicit mapping
            - Implicit name matching
            - Type matching
            
            Or fail with clear message 
                
        index-dedup:
            inputs:
                input: dedup/dups_output
                
        metrics:
            inputs:
                input: dedup/dups_output
                
            outputs:
                output:
                historgam:
                
        coverage:
            inputs:
                input: dedup/dups_output
                
        output flows into next
                    
        summarize-genomecov:
        
        
        merge-parents: 
            inputs:
                input: parent[dedup/dups_output] # This indicates a gather on a thread
            outputs:
                merge:
        
        gridss:
            inputs:
                children: children[dedup/dups_output]
                parent-merge: merge # Convention is to look in immediate step. This simplifies above 
        
        
        report:
        archive:
        upload:



To reduce syntax can we do:

For input, i.XXXXX
For output o.XXXX









Conventions:

C1: Steps are assumed in order unless otherwise proven by input dependency

C2: In mapping if not path then plug in global or output form immediate step

            