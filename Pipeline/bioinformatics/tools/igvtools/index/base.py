from Pipeline import ToolInput
from Pipeline.bioinformatics.data_types.vcf import TabixIdx
from Pipeline.bioinformatics.tools.igvtools.igvtoolstoolbase import IgvToolsToolBase


class IgvToolsIndexBase(IgvToolsToolBase):
    @classmethod
    def igvtools_command(cls):
        return "index"

    @staticmethod
    def tool():
        return "igvtools-index"

    def inputs(self):
        return [
            ToolInput("input", TabixIdx(), doc="The alignment or feature file for which an index will be created")
        ]

    def outputs(self):
        return [

        ]

    @staticmethod
    def doc():
        return IgvToolsToolBase.doc() + """
        
    ---------------------------------------------------------
    
    Creates an index for an alignment or feature file. Index files are required for loading alignment files 
    into IGV, and can significantly improve performance for large feature files. Note that the index file 
    is not directly loaded into IGV. Rather, IGV looks for the index file when the alignment or feature file 
    is loaded. This command does not take an output file argument. Instead, the filename is generated by 
    appending ".sai" (for alignments) or ".idx" (for features) to the input filename as IGV relies on this 
    naming convention to find the index . The input file must be sorted by start position (see sort command, below). 

    Supported input file formats are: .sam, .bam, .aligned, .vcf, .psl, and .bed.
    
    Note: The "sai" index is an IGV format, it does not work with samtools or any other application.
    
    Documentation: https://software.broadinstitute.org/software/igv/igvtools_commandline#index"""
